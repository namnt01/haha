# Openshift UAT


oc apply -f - <<EOF
apiVersion: "autoscaling.openshift.io/v1beta1"
kind: "MachineAutoscaler"
metadata:
  name: "vmw-mbqt7-worker"
  namespace: "openshift-machine-api"
spec:
  minReplicas: 3
  maxReplicas: 6
  scaleTargetRef:
    apiVersion: machine.openshift.io/v1beta1
    kind: MachineSet
    name: vmw-mbqt7-worker
EOF



oc apply -f - <<EOF
apiVersion: "autoscaling.openshift.io/v1"
kind: "ClusterAutoscaler"
metadata:
  name: "default"
spec:
  podPriorityThreshold: -10
  resourceLimits:
    maxNodesTotal: 10
    cores:
      min: 8
      max: 128
    memory:
      min: 4
      max: 256
  scaleDown:
    enabled: true
    delayAfterAdd: 10m
    delayAfterDelete: 5m
    delayAfterFailure: 30s
    unneededTime: 60s
EOF



oc new-project nginx
oc new-app nginx-example -p NGINX_VERSION=1.20-ubi8

$ oc get deploymentconfig
NAME            REVISION   DESIRED   CURRENT   TRIGGERED BY
nginx-example   0          1         0         config,image(nginx-example:latest)


$ oc patch dc/nginx-example \
    --type='json' \
    --patch='[
        {"op": "replace", "path": "/spec/template/spec/containers/0/resources", "value": {"limits":{"memory":"1Gi","cpu": 1},"requests":{"memory":"1Gi","cpu": 1}}}
    ]'

$ oc get nodes

$ oc get machines -n openshift-machine-api

$ oc scale dc/nginx-example --replicas=100


# After a while:

$ oc get nodes

$ oc get machines

$ oc get pods -n nginx | wc -l
     104


# Some coffees later:

$ oc get machines,nodes,machineset

apiVersion: v1 
kind: ResourceQuota 
metadata: 
  name: compute-resources 
  namespace: <namespace or project name> 
spec: 
  hard: 
    pods: "4"  
    requests.cpu: "1"  
    requests.memory: 1Gi  
    requests.ephemeral-storage: 2Gi 
    limits.cpu: "2"  
    limits.memory: 2Gi  
    limits.ephemeral-storage: 4Gi  
    
    
 Network traffic
 objects: 
apiVersion: networking.k8s.io/v1 
kind: NetworkPolicy 
metadata: 
  name: allow-from-same-namespace 
spec: 
  podSelector: 
  ingress: 
  - from: 
    - podSelector: {} 
apiVersion: networking.k8s.io/v1 
kind: NetworkPolicy 
metadata: 
  name: allow-from-openshift-ingress 
spec: 
  ingress: 
  - from:
    - namespaceSelector: 
        matchLabels: 
          network.openshift.io/policy-group: ingress 
  podSelector: {} 
  policyTypes: 
  - Ingress 

apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-monitoring-config
  namespace: openshift-monitoring
data:
  config.yaml: |
    prometheusK8s: 
      volumeClaimTemplate:
       spec:
         storageClassName: fast
         volumeMode: Filesystem
         resources:
           requests:
             storage: 40Gi
             
             
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-workload-monitoring-config
  
  
  
  
apiVersion: config.openshift.io/v1
kind: OAuth
metadata:
  name: cluster
spec:
  identityProviders:
  - name: my_htpasswd_provider 
    mappingMethod: claim 
    type: HTPasswd
    htpasswd:
      fileData:
        name: htpass-secret 

  namespace: openshift-user-workload-monitoring
data:
  config.yaml: |
    prometheus: 
      retention: 24h 
      resources:
        requests:
          cpu: 200m 
          memory: 2Gi 

